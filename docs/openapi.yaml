openapi: 3.0.0
info:
  title: Charging Management Service
  version: 0.0.0
tags: []
paths:
  /vehicle:
    get:
      operationId: getVehicleData
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleData'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /vehicle/charge/setting:
    get:
      operationId: Setting_getVehicleChargeSetting
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Charge.Setting.Setting'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: Setting_saveVehicleChargeSetting
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Charge.Setting.Setting'
components:
  schemas:
    Charge.Setting.MinimumSetting:
      type: object
      required:
        - threshold
        - time_range_start
        - time_range_end
        - amperage
      properties:
        threshold:
          type: integer
          format: uint8
          minimum: 0
          maximum: 100
          default: 0
        time_range_start:
          type: string
          example: 22:00
          pattern: ^\d{2}:\d{2}$
          default: 22:00
        time_range_end:
          type: string
          example: 22:00
          pattern: ^\d{2}:\d{2}$
          default: 06:00
        amperage:
          type: integer
          format: uint8
          minimum: 5
          maximum: 16
          default: 16
    Charge.Setting.Setting:
      type: object
      required:
        - enabled
        - charge_start_threshold
        - power_usage_increase_threshold
        - power_usage_decrease_threshold
        - update_interval
        - minimum_setting
      properties:
        enabled:
          type: boolean
        charge_start_threshold:
          type: integer
          minimum: 100
        power_usage_increase_threshold:
          type: integer
          minimum: 100
        power_usage_decrease_threshold:
          type: integer
          maximum: 100
        update_interval:
          type: integer
          minimum: 10
          description: minutes of update interval
        minimum_setting:
          allOf:
            - $ref: '#/components/schemas/Charge.Setting.MinimumSetting'
          description: setting to charge the vehicle until the battery reaches the threshold
    ChargeState:
      type: object
      required:
        - battery_level
        - battery_range
        - charge_amps
        - charge_current_request
        - charge_current_request_max
        - charge_enable_request
        - charge_limit_soc
        - charge_port_door_open
        - charge_port_latch
        - charger_actual_current
        - charger_voltage
        - charging_state
        - minutes_to_full_charge
        - timestamp
        - usable_battery_level
      properties:
        battery_level:
          type: integer
          minimum: 0
          maximum: 100
        battery_range:
          type: number
        charge_amps:
          type: integer
        charge_current_request:
          type: integer
        charge_current_request_max:
          type: integer
        charge_enable_request:
          type: boolean
        charge_limit_soc:
          type: integer
          minimum: 0
          maximum: 100
        charge_port_door_open:
          type: boolean
        charge_port_latch:
          type: string
          example: Engaged
        charger_actual_current:
          type: integer
        charger_voltage:
          type: integer
        charging_state:
          type: string
          example: Charging
        minutes_to_full_charge:
          type: integer
        timestamp:
          type: integer
          format: int64
        usable_battery_level:
          type: integer
          minimum: 0
          maximum: 100
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode'
        message:
          type: string
    ErrorCode:
      type: string
      enum:
        - FailedPrecondition
        - ValidationError
        - NotFound
        - InternalServerError
    VehicleData:
      type: object
      required:
        - vin
        - state
        - charge_state
      properties:
        vin:
          type: string
          minLength: 1
        state:
          type: string
          enum:
            - online
            - offline
        charge_state:
          $ref: '#/components/schemas/ChargeState'
servers:
  - url: http://localhost:8088
    description: API server endpoint
    variables: {}
