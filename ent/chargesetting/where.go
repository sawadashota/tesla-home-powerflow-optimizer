// Code generated by ent, DO NOT EDIT.

package chargesetting

import (
	"entgo.io/ent/dialect/sql"

	"github.com/sawadashota/tesla-home-powerflow-optimizer/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldLTE(FieldID, id))
}

// Enabled applies equality check predicate on the "enabled" field. It's identical to EnabledEQ.
func Enabled(v bool) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldEQ(FieldEnabled, v))
}

// ChargeStartThreshold applies equality check predicate on the "charge_start_threshold" field. It's identical to ChargeStartThresholdEQ.
func ChargeStartThreshold(v int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldEQ(FieldChargeStartThreshold, v))
}

// PowerUsageIncreaseThreshold applies equality check predicate on the "power_usage_increase_threshold" field. It's identical to PowerUsageIncreaseThresholdEQ.
func PowerUsageIncreaseThreshold(v int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldEQ(FieldPowerUsageIncreaseThreshold, v))
}

// PowerUsageDecreaseThreshold applies equality check predicate on the "power_usage_decrease_threshold" field. It's identical to PowerUsageDecreaseThresholdEQ.
func PowerUsageDecreaseThreshold(v int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldEQ(FieldPowerUsageDecreaseThreshold, v))
}

// UpdateInterval applies equality check predicate on the "update_interval" field. It's identical to UpdateIntervalEQ.
func UpdateInterval(v int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldEQ(FieldUpdateInterval, v))
}

// EnabledEQ applies the EQ predicate on the "enabled" field.
func EnabledEQ(v bool) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldEQ(FieldEnabled, v))
}

// EnabledNEQ applies the NEQ predicate on the "enabled" field.
func EnabledNEQ(v bool) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldNEQ(FieldEnabled, v))
}

// ChargeStartThresholdEQ applies the EQ predicate on the "charge_start_threshold" field.
func ChargeStartThresholdEQ(v int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldEQ(FieldChargeStartThreshold, v))
}

// ChargeStartThresholdNEQ applies the NEQ predicate on the "charge_start_threshold" field.
func ChargeStartThresholdNEQ(v int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldNEQ(FieldChargeStartThreshold, v))
}

// ChargeStartThresholdIn applies the In predicate on the "charge_start_threshold" field.
func ChargeStartThresholdIn(vs ...int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldIn(FieldChargeStartThreshold, vs...))
}

// ChargeStartThresholdNotIn applies the NotIn predicate on the "charge_start_threshold" field.
func ChargeStartThresholdNotIn(vs ...int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldNotIn(FieldChargeStartThreshold, vs...))
}

// ChargeStartThresholdGT applies the GT predicate on the "charge_start_threshold" field.
func ChargeStartThresholdGT(v int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldGT(FieldChargeStartThreshold, v))
}

// ChargeStartThresholdGTE applies the GTE predicate on the "charge_start_threshold" field.
func ChargeStartThresholdGTE(v int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldGTE(FieldChargeStartThreshold, v))
}

// ChargeStartThresholdLT applies the LT predicate on the "charge_start_threshold" field.
func ChargeStartThresholdLT(v int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldLT(FieldChargeStartThreshold, v))
}

// ChargeStartThresholdLTE applies the LTE predicate on the "charge_start_threshold" field.
func ChargeStartThresholdLTE(v int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldLTE(FieldChargeStartThreshold, v))
}

// PowerUsageIncreaseThresholdEQ applies the EQ predicate on the "power_usage_increase_threshold" field.
func PowerUsageIncreaseThresholdEQ(v int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldEQ(FieldPowerUsageIncreaseThreshold, v))
}

// PowerUsageIncreaseThresholdNEQ applies the NEQ predicate on the "power_usage_increase_threshold" field.
func PowerUsageIncreaseThresholdNEQ(v int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldNEQ(FieldPowerUsageIncreaseThreshold, v))
}

// PowerUsageIncreaseThresholdIn applies the In predicate on the "power_usage_increase_threshold" field.
func PowerUsageIncreaseThresholdIn(vs ...int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldIn(FieldPowerUsageIncreaseThreshold, vs...))
}

// PowerUsageIncreaseThresholdNotIn applies the NotIn predicate on the "power_usage_increase_threshold" field.
func PowerUsageIncreaseThresholdNotIn(vs ...int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldNotIn(FieldPowerUsageIncreaseThreshold, vs...))
}

// PowerUsageIncreaseThresholdGT applies the GT predicate on the "power_usage_increase_threshold" field.
func PowerUsageIncreaseThresholdGT(v int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldGT(FieldPowerUsageIncreaseThreshold, v))
}

// PowerUsageIncreaseThresholdGTE applies the GTE predicate on the "power_usage_increase_threshold" field.
func PowerUsageIncreaseThresholdGTE(v int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldGTE(FieldPowerUsageIncreaseThreshold, v))
}

// PowerUsageIncreaseThresholdLT applies the LT predicate on the "power_usage_increase_threshold" field.
func PowerUsageIncreaseThresholdLT(v int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldLT(FieldPowerUsageIncreaseThreshold, v))
}

// PowerUsageIncreaseThresholdLTE applies the LTE predicate on the "power_usage_increase_threshold" field.
func PowerUsageIncreaseThresholdLTE(v int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldLTE(FieldPowerUsageIncreaseThreshold, v))
}

// PowerUsageDecreaseThresholdEQ applies the EQ predicate on the "power_usage_decrease_threshold" field.
func PowerUsageDecreaseThresholdEQ(v int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldEQ(FieldPowerUsageDecreaseThreshold, v))
}

// PowerUsageDecreaseThresholdNEQ applies the NEQ predicate on the "power_usage_decrease_threshold" field.
func PowerUsageDecreaseThresholdNEQ(v int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldNEQ(FieldPowerUsageDecreaseThreshold, v))
}

// PowerUsageDecreaseThresholdIn applies the In predicate on the "power_usage_decrease_threshold" field.
func PowerUsageDecreaseThresholdIn(vs ...int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldIn(FieldPowerUsageDecreaseThreshold, vs...))
}

// PowerUsageDecreaseThresholdNotIn applies the NotIn predicate on the "power_usage_decrease_threshold" field.
func PowerUsageDecreaseThresholdNotIn(vs ...int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldNotIn(FieldPowerUsageDecreaseThreshold, vs...))
}

// PowerUsageDecreaseThresholdGT applies the GT predicate on the "power_usage_decrease_threshold" field.
func PowerUsageDecreaseThresholdGT(v int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldGT(FieldPowerUsageDecreaseThreshold, v))
}

// PowerUsageDecreaseThresholdGTE applies the GTE predicate on the "power_usage_decrease_threshold" field.
func PowerUsageDecreaseThresholdGTE(v int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldGTE(FieldPowerUsageDecreaseThreshold, v))
}

// PowerUsageDecreaseThresholdLT applies the LT predicate on the "power_usage_decrease_threshold" field.
func PowerUsageDecreaseThresholdLT(v int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldLT(FieldPowerUsageDecreaseThreshold, v))
}

// PowerUsageDecreaseThresholdLTE applies the LTE predicate on the "power_usage_decrease_threshold" field.
func PowerUsageDecreaseThresholdLTE(v int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldLTE(FieldPowerUsageDecreaseThreshold, v))
}

// UpdateIntervalEQ applies the EQ predicate on the "update_interval" field.
func UpdateIntervalEQ(v int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldEQ(FieldUpdateInterval, v))
}

// UpdateIntervalNEQ applies the NEQ predicate on the "update_interval" field.
func UpdateIntervalNEQ(v int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldNEQ(FieldUpdateInterval, v))
}

// UpdateIntervalIn applies the In predicate on the "update_interval" field.
func UpdateIntervalIn(vs ...int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldIn(FieldUpdateInterval, vs...))
}

// UpdateIntervalNotIn applies the NotIn predicate on the "update_interval" field.
func UpdateIntervalNotIn(vs ...int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldNotIn(FieldUpdateInterval, vs...))
}

// UpdateIntervalGT applies the GT predicate on the "update_interval" field.
func UpdateIntervalGT(v int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldGT(FieldUpdateInterval, v))
}

// UpdateIntervalGTE applies the GTE predicate on the "update_interval" field.
func UpdateIntervalGTE(v int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldGTE(FieldUpdateInterval, v))
}

// UpdateIntervalLT applies the LT predicate on the "update_interval" field.
func UpdateIntervalLT(v int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldLT(FieldUpdateInterval, v))
}

// UpdateIntervalLTE applies the LTE predicate on the "update_interval" field.
func UpdateIntervalLTE(v int) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.FieldLTE(FieldUpdateInterval, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ChargeSetting) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ChargeSetting) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ChargeSetting) predicate.ChargeSetting {
	return predicate.ChargeSetting(sql.NotPredicates(p))
}
